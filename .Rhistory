install.packages('sp')
install.packages('rgdal')
install.packages('raster')
install.packages("randomcoloR")
library(tidyr)
library(RColorBrewer)
library (sp)
library (rgdal)
library (raster)
library(randomcoloR)
install.packages('rgdal')
library(rgdal)
library(rgdal)
install.packages('rgdal')
library(rgdal)
library (sp)
library(RColorBrewer)
library (raster)
library(randomcoloR)
install.packages('randomcoloR')
update.packages(ask = FALSE, checkBuilt = TRUE)
library(tidyr)
library(RColorBrewer)
library (sp)
library (rgdal)
library (raster)
library(randomcoloR)
install.packages('tidyr')
library(tidyr)
library(RColorBrewer)
library (sp)
library (rgdal)
library (raster)
library(randomcoloR)
install.packages('tidyr')
install.packages("tidyr")
install.packages("randomcoloR")
library(randomcoloR)
library(pdftools)
library(xml2)
library(rvest)
install.packages('rvest')
install.packages('pdftools')
library(pdftools)
library(xml2)
library(rvest)
install.packages("tidyverse")
library(tidyverse)
install.packages("rattle", dep=c("Suggests"))
install.packages("lpSolveAPI")
iris$Species=="setosa"
# R code goes here
iris$Species=="setosa"
setosa_sl<-iris$Sepal.Length[iris$Species=='setosa']
virginica_sl<-iris$Sepal.Length[iris$Species=='virginica']
t.test(setosa_sl,virginica_sl)
# R code goes here.
head(iris)
# R code goes here.
head(iris)
iris$Species
unique(iris$Species)
# R code goes here.
head(iris)
unique(iris$Species)
versicolor_sl<-iris$Sepal.Length[iris$Species=='versicolor']
?boxplot()
boxplot(versicolor_sl)
boxplot(setosa_sl,virginica_sl,versicolor_sl)
boxplot(setosa_sl,virginica_sl,versicolor_sl,names = c('setosa,virginica,versicolor'))
boxplot(setosa_sl,virginica_sl,versicolor_sl,names = c('setosa','virginica','versicolor'))
#easy way is
boxplot(iris$Sepal.Length ~ iris$Species=='setosa',ylab="Sepal Length (cm)")
#easy way is
boxplot(iris$Sepal.Length ~ iris$Species,ylab="Sepal Length (cm)")
plot(iris$Sepal.Length ~ iris$Species)
?plot
plot(iris$Sepal.Length ~ iris$Species,type="p")
plot(iris$Sepal.Length, iris$Species,type="p")
setosa<-iris[iris$Species=='setosa',]
virginica<-iris[iris$Species=='virginica',]
versicolor<-iris[iris$Species=='versicolor',]
pwd()
getwd()
# install.packages("devtools")
devtools::install_github("FinYang/tsdl")
library(tsdl)
library(forecast)
tsdl
subset(tsdiag())
subset(tsdl,"Sales")
sales=subset(tsdl,"Sales")
View(sales)
View(sales)
sales[[1]]
tsdl
health= subset(tsdl,"Health")
View(health)
health[[8]]
devtools::install_github("robjhyndman/tscompdata")
library(tscompdata)
#> Loading required package: Mcomp
#> Loading required package: forecast
#> Loading required package: Tcomp
library(forecast)
Tcomp::tourism
M1
data = M3
View(data)
View(data)
str(meta_tsdl)
library(tscompdata)
tourism
str(meta_tsdl)
contents=str(meta_tsdl)
tsdl
health
View(health)
health[[9]]
meta_tsdl
meta=meta_tsdl
View(meta)
meta[,subject=="Health"]
meta[,"subject"=="Health"]
health_data=subset(meta,subject = "Health")
View(health_data)
clc
clear
health_data=meta[which(meta$subject=="Health")]
health_data=meta[which(meta$subject=="Health"),]
View(health_data)
meta$timeseries_num=c(1:length(meta$source))
View(meta)
View(health_data)
meta=meta_tsdl
meta$timeseries_num=c(1:length(meta$source))
health_data=meta[which(meta$subject=="Health"),]
View(health_data)
setwd('/home/akshay/Desktop/Applied_data')
install.packages("rio")
library("rio")
xls <- dir(pattern = "xlsx")
created <- mapply(convert, xls, gsub("xlsx", "csv", xls)
install_formats('csvy')
install.packages("csvy")
install.packages("feather")
install.packages(c("fst", "hexView", "readODS", "rmatio", "feather"))
library("rio")
xls <- dir(pattern = "xlsx")
created <- mapply(convert, xls, gsub("xlsx", "csv", xls)
unlink(xls)
library("rio")
xls <- dir(pattern = "xlsx")
created <- mapply(convert, xls, gsub("xlsx", "csv", xls))
